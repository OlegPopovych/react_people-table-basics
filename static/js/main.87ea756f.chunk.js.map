{"version":3,"sources":["components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/ErrorLoadPage/ErrorLoadPage.tsx","components/PersoneLink/PersoneLink.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","ErrorLoadPage","PersoneLink","person","cn","sex","to","slug","name","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","isError","setIsError","useParams","getDataFromServer","peopleFromServer","personWithParents","map","mother","find","parent","motherName","father","fatherName","useEffect","length","born","died","per","NotFoundPage","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.87ea756f.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const ErrorLoadPage = () => {\n  return (\n    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n      Something went wrong\n    </p>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person?: Person;\n};\n\nexport const PersoneLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      className={cn(\n        { 'has-text-danger': person?.sex === 'f' },\n      )}\n      to={`/people/${person?.slug}`}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\n\nimport { Loader } from '../Loader';\nimport { ErrorLoadPage } from '../ErrorLoadPage';\nimport { PersoneLink } from '../PersoneLink';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const { slug } = useParams();\n\n  const getDataFromServer = async () => {\n    setIsLoading(true);\n    setIsError(false);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      const personWithParents = peopleFromServer\n        .map(person => {\n          const mother = peopleFromServer\n            .find(parent => parent.name === person.motherName);\n          const father = peopleFromServer\n            .find(parent => parent.name === person.fatherName);\n\n          return {\n            ...person,\n            mother,\n            father,\n          };\n        });\n\n      setPeople(personWithParents);\n    } catch (error) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getDataFromServer();\n  }, []);\n\n  const content = () => {\n    if (isLoading) {\n      return <Loader />;\n    }\n\n    if (isError) {\n      return <ErrorLoadPage />;\n    }\n\n    if (!people.length) {\n      return (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      );\n    }\n\n    return (\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => {\n            const mother = () => {\n              if (!person.motherName) {\n                return '-';\n              }\n\n              return people\n                .find(per => per.motherName === person.mother?.name)\n                ? <PersoneLink person={person.mother} />\n                : person.motherName;\n            };\n\n            const father = () => {\n              if (!person.fatherName) {\n                return '-';\n              }\n\n              return people\n                .find(per => per.fatherName === person.father?.name)\n                ? <PersoneLink person={person.father} />\n                : person.fatherName;\n            };\n\n            return (\n              <tr\n                key={person.slug}\n                className={cn(\n                  { 'has-background-warning': person.slug === slug },\n                )}\n                data-cy=\"person\"\n              >\n                <td>\n                  <PersoneLink person={person} />\n                </td>\n\n                <td>{person.sex}</td>\n\n                <td>{person.born}</td>\n\n                <td>{person.died}</td>\n\n                <td>{mother()}</td>\n\n                <td>{father()}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {content()}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  Routes,\n  Route,\n  NavLink,\n  Navigate,\n} from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => cn('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={({ isActive }) => cn('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}